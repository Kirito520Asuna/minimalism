<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minimalism.job.mapper.SysJobMapper">
    <resultMap id="BaseResultMap" type="com.minimalism.job.domain.SysJob">
        <!--@mbg.generated-->
        <!--@Table sys_job-->
        <id column="job_id" jdbcType="BIGINT" property="jobId"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="job_group" jdbcType="VARCHAR" property="jobGroup"/>
        <result column="invoke_target" jdbcType="VARCHAR" property="invokeTarget"/>
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression"/>
        <result column="misfire_policy" jdbcType="VARCHAR" property="misfirePolicy"/>
        <result column="concurrent" jdbcType="CHAR" property="concurrent"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        job_id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent,
        `status`, create_by, create_time, update_by, update_time, remark
    </sql>

    <select id="selectJobList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_job
        <where>
            <if test="jobName != null and jobName != ''">
                and job_name like concat('%', #{jobName}, '%')
            </if>
            <if test="jobGroup != null and jobGroup != ''">
                and job_group = #{jobGroup}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="invokeTarget != null and invokeTarget != ''">
                and invoke_target like concat('%', #{invokeTarget}, '%')
            </if>

        </where>
    </select>
</mapper>