<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">
    #set($pkColumnName=$pkColumn.columnName)
    #set($pkJavaField=$pkColumn.javaField)
    <resultMap id="BaseResultMap" type="${ClassName}">
        <!--@mbg.generated-->
        <!--@Table `${tableName}`-->
        #foreach ($column in $columns)
            #if(${column.isPk()})
                <id column="`${column.columnName}`" property="${column.javaField}"/>
            #else
                <result column="`${column.columnName}`" property="${column.javaField}"/>
            #end
        #end
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        #foreach($column in $columns)`$column.columnName`#if($foreach.count != $columns.size()),#end
        #end
    </sql>

    <select id="select${ClassName}List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `${tableName}`
        <where>
            #foreach($column in $columns)
                #set($query=$column.query)
                #set($queryType=$column.queryType)
                #set($javaField=$column.javaField)
                #set($javaType=$column.javaType)
                #set($columnName=$column.columnName)
                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #if($column.query)
                    #if($column.queryType == "EQ")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` = #{${javaField}}
                        </if>
                    #elseif($queryType == "NE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` <![CDATA[!=]]> #{${javaField}}
                        </if>
                    #elseif($queryType == "GT")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` <![CDATA[>]]> #{${javaField}}
                        </if>
                    #elseif($queryType == "GTE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` <![CDATA[>=]]> #{${javaField}}
                        </if>
                    #elseif($queryType == "LT")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` <![CDATA[<]]> #{${javaField}}
                        </if>
                    #elseif($queryType == "LTE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` <![CDATA[<=]]> #{${javaField}}
                        </if>
                    #elseif($queryType == "LIKE")
                        <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end">
                            and `$columnName` like concat('%', #{${javaField}}, '%')
                        </if>
                    #elseif($queryType == "BETWEEN")
                        <if test="params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != ''">
                            and `$columnName` between #{params.begin${AttrName}} and #{params.end${AttrName}}
                        </if>
                    #end
                #end
            #end
        </where>
    </select>

    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update `${tableName}`
        <trim prefix="set" suffixOverrides=",">
            <!--<set>-->
            #foreach ($column in ${columns})#set($columnName=$column.columnName)#set($javaField=$column.javaField)#if(!${column.isPk()})
                <trim prefix="`$columnName` = case" suffix="end,">
                    <foreach collection="list" index="index" item="item">
                        <if test="item.$javaField != null">
                            when `${pkColumnName}` = #{item.${pkJavaField}} then #{item.${javaField}}
                        </if>
                    </foreach>
                </trim>#end
            #end
            <!--</set>-->
        </trim>
        where `${pkColumnName}` in
        <foreach collection="list" item="item" open="(" separator=", " close=")">
            #{item.${pkJavaField}}
        </foreach>
    </update>

    <insert id="batchInsert" keyColumn="${pkColumnName}" keyProperty="${pkJavaField}" parameterType="map"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `${tableName}`
        (#foreach($column in $columns)#set($columnName=$column.columnName)#if(!${column.isPk()})
        `${columnName}`#if($foreach.count != $columns.size()),#end#end#end)
        values
        <foreach collection="list" item="item" separator=",">
            (#foreach($column in $columns)#set($javaField=$column.javaField)#if(!${column.isPk()})
            #{${javaField}}#if($foreach.count != $columns.size()),#end#end#end)
        </foreach>
    </insert>

    <delete id="deleteByPrimaryKeyIn">
        <!--@mbg.generated-->
        delete
        from `${tableName}` where `${pkColumnName}` in
        <foreach collection="list" item="${pkJavaField}" open="(" separator=", " close=")">
            #{pkJavaField}
        </foreach>
    </delete>

    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        <foreach collection="list" item="item" separator=";">
            update `${tableName}`
            <set>
                #foreach ($column in ${columns})#set($columnName=$column.columnName)#set($javaField=$column.javaField)#if(!${column.isPk()})
                    <if test="item.${javaField} != null">
                        `$columnName` = #{item.${javaField}},
                    </if>#end
                #end
            </set>
            where `${pkColumnName}` = #{item.${pkJavaField}}
        </foreach>
    </update>

    <insert id="batchInsertSelectiveUseDefaultForNull" keyColumn="${pkColumnName}" keyProperty="${pkJavaField}"
            parameterType="map"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `${tableName}`
        (#foreach($column in $columns)#set($columnName=$column.columnName)`${columnName}
        `#if($foreach.count != $columns.size()),#end
    #end )
        values
        <foreach collection="list" item="item" separator=",">
            (#foreach($column in $columns)#set($javaField=$column.javaField)#if(!${column.isPk()})
            <when test="item.${javaField} != null">
                #{item.${javaField}}#if($foreach.count != $columns.size()),#end
            </when>
            <!--@ignoreSql-->
            <otherwise>
                DEFAULT#if($foreach.count != $columns.size()),#end
            </otherwise>
        #end
        #end )
        </foreach>
    </insert>

    <insert id="insertOrUpdate" keyColumn="${pkColumnName}" keyProperty="${pkJavaField}"
            parameterType="${ClassName}" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `${tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)#set($columnName=$column.columnName)#set($javaField=$column.javaField)#if(${column.isPk()})
                <if test="${javaField} != null">`${columnName}`#if($foreach.count != $columns.size()),#end</if>
            #else`${columnName}`#if($foreach.count != $columns.size()),#end#end
            #end
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)#set($columnName=$column.columnName)#set($javaField=$column.javaField)#if(${column.isPk()})
                <if test="${javaField} != null">#{${javaField}}#if($foreach.count != $columns.size()),#end</if>
            #else#{${javaField}}#if($foreach.count != $columns.size()),#end
            #end
            #end
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            #foreach($column in $columns)#set($columnName=$column.columnName)#set($javaField=$column.javaField)#if(${column.isPk()})
                <if test="${javaField} != null">`${columnName}` = #{${javaField}}#if($foreach.count != $columns.size())
                    ,#end</if>
            #else`${columnName}` = #{${javaField}}#if($foreach.count != $columns.size()),#end
            #end
            #end
        </trim>
    </insert>

    <insert id="insertOrUpdateSelective" keyColumn="${pkColumnName}" keyProperty="${pkJavaField}"
            parameterType="${ClassName}" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `${tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #set($columnName=$column.columnName)
                #set($javaField=$column.javaField)
                <if test="${javaField} != null">
                    `${columnName}`#if($foreach.count != $columns.size()),#end
                </if>
            #end
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)#set($columnName=$column.columnName)#set($javaField=$column.javaField)
                <if test="${javaField} != null">
                    #{${javaField}}#if($foreach.count != $columns.size()),#end
                </if>
            #end
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            #foreach($column in $columns)#set($columnName=$column.columnName)#set($javaField=$column.javaField)
                <if test="${javaField} != null">
                    `${columnName}` = #{${javaField}}#if($foreach.count != $columns.size()),#end
                </if>
            #end
        </trim>
    </insert>


</mapper>